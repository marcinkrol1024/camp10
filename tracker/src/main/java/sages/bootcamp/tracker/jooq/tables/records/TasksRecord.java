/*
 * This file is generated by jOOQ.
*/
package sages.bootcamp.tracker.jooq.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import sages.bootcamp.tracker.jooq.enums.TaskStatus;
import sages.bootcamp.tracker.jooq.tables.Tasks;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TasksRecord extends UpdatableRecordImpl<TasksRecord> implements Record7<Long, String, Timestamp, Long, TaskStatus, Long, Long> {

    private static final long serialVersionUID = 565175342;

    /**
     * Setter for <code>public.tasks.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tasks.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.tasks.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tasks.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.tasks.created</code>.
     */
    public void setCreated(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tasks.created</code>.
     */
    public Timestamp getCreated() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>public.tasks.assignee_id</code>.
     */
    public void setAssigneeId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tasks.assignee_id</code>.
     */
    public Long getAssigneeId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.tasks.status</code>.
     */
    public void setStatus(TaskStatus value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.tasks.status</code>.
     */
    public TaskStatus getStatus() {
        return (TaskStatus) get(4);
    }

    /**
     * Setter for <code>public.tasks.project_id</code>.
     */
    public void setProjectId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.tasks.project_id</code>.
     */
    public Long getProjectId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.tasks.parent_id</code>.
     */
    public void setParentId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.tasks.parent_id</code>.
     */
    public Long getParentId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, Timestamp, Long, TaskStatus, Long, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, Timestamp, Long, TaskStatus, Long, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Tasks.TASKS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Tasks.TASKS.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Tasks.TASKS.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Tasks.TASKS.ASSIGNEE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<TaskStatus> field5() {
        return Tasks.TASKS.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return Tasks.TASKS.PROJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return Tasks.TASKS.PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getAssigneeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskStatus value5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value2(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value3(Timestamp value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value4(Long value) {
        setAssigneeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value5(TaskStatus value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value6(Long value) {
        setProjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value7(Long value) {
        setParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord values(Long value1, String value2, Timestamp value3, Long value4, TaskStatus value5, Long value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TasksRecord
     */
    public TasksRecord() {
        super(Tasks.TASKS);
    }

    /**
     * Create a detached, initialised TasksRecord
     */
    public TasksRecord(Long id, String title, Timestamp created, Long assigneeId, TaskStatus status, Long projectId, Long parentId) {
        super(Tasks.TASKS);

        set(0, id);
        set(1, title);
        set(2, created);
        set(3, assigneeId);
        set(4, status);
        set(5, projectId);
        set(6, parentId);
    }
}
