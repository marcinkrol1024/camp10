/*
 * This file is generated by jOOQ.
*/
package sages.bootcamp.tracker.jooq;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import sages.bootcamp.tracker.jooq.tables.Projects;
import sages.bootcamp.tracker.jooq.tables.Tasks;
import sages.bootcamp.tracker.jooq.tables.UserProject;
import sages.bootcamp.tracker.jooq.tables.Users;
import sages.bootcamp.tracker.jooq.tables.records.ProjectsRecord;
import sages.bootcamp.tracker.jooq.tables.records.TasksRecord;
import sages.bootcamp.tracker.jooq.tables.records.UserProjectRecord;
import sages.bootcamp.tracker.jooq.tables.records.UsersRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>public</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ProjectsRecord, Long> IDENTITY_PROJECTS = Identities0.IDENTITY_PROJECTS;
    public static final Identity<TasksRecord, Long> IDENTITY_TASKS = Identities0.IDENTITY_TASKS;
    public static final Identity<UsersRecord, Long> IDENTITY_USERS = Identities0.IDENTITY_USERS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ProjectsRecord> PROJECTS_PKEY = UniqueKeys0.PROJECTS_PKEY;
    public static final UniqueKey<TasksRecord> TASKS_PKEY = UniqueKeys0.TASKS_PKEY;
    public static final UniqueKey<UserProjectRecord> USER_PROJECT_USER_ID_PROJECT_ID_KEY = UniqueKeys0.USER_PROJECT_USER_ID_PROJECT_ID_KEY;
    public static final UniqueKey<UsersRecord> USERS_PKEY = UniqueKeys0.USERS_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<TasksRecord, UsersRecord> TASKS__TASKS_ASSIGNEE_ID_FKEY = ForeignKeys0.TASKS__TASKS_ASSIGNEE_ID_FKEY;
    public static final ForeignKey<TasksRecord, ProjectsRecord> TASKS__TASKS_PROJECT_ID_FKEY = ForeignKeys0.TASKS__TASKS_PROJECT_ID_FKEY;
    public static final ForeignKey<TasksRecord, TasksRecord> TASKS__TASKS_PARENT_ID_FKEY = ForeignKeys0.TASKS__TASKS_PARENT_ID_FKEY;
    public static final ForeignKey<UserProjectRecord, UsersRecord> USER_PROJECT__USER_PROJECT_USER_ID_FKEY = ForeignKeys0.USER_PROJECT__USER_PROJECT_USER_ID_FKEY;
    public static final ForeignKey<UserProjectRecord, ProjectsRecord> USER_PROJECT__USER_PROJECT_PROJECT_ID_FKEY = ForeignKeys0.USER_PROJECT__USER_PROJECT_PROJECT_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<ProjectsRecord, Long> IDENTITY_PROJECTS = createIdentity(Projects.PROJECTS, Projects.PROJECTS.ID);
        public static Identity<TasksRecord, Long> IDENTITY_TASKS = createIdentity(Tasks.TASKS, Tasks.TASKS.ID);
        public static Identity<UsersRecord, Long> IDENTITY_USERS = createIdentity(Users.USERS, Users.USERS.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<ProjectsRecord> PROJECTS_PKEY = createUniqueKey(Projects.PROJECTS, "projects_pkey", Projects.PROJECTS.ID);
        public static final UniqueKey<TasksRecord> TASKS_PKEY = createUniqueKey(Tasks.TASKS, "tasks_pkey", Tasks.TASKS.ID);
        public static final UniqueKey<UserProjectRecord> USER_PROJECT_USER_ID_PROJECT_ID_KEY = createUniqueKey(UserProject.USER_PROJECT, "user_project_user_id_project_id_key", UserProject.USER_PROJECT.USER_ID, UserProject.USER_PROJECT.PROJECT_ID);
        public static final UniqueKey<UsersRecord> USERS_PKEY = createUniqueKey(Users.USERS, "users_pkey", Users.USERS.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<TasksRecord, UsersRecord> TASKS__TASKS_ASSIGNEE_ID_FKEY = createForeignKey(sages.bootcamp.tracker.jooq.Keys.USERS_PKEY, Tasks.TASKS, "tasks__tasks_assignee_id_fkey", Tasks.TASKS.ASSIGNEE_ID);
        public static final ForeignKey<TasksRecord, ProjectsRecord> TASKS__TASKS_PROJECT_ID_FKEY = createForeignKey(sages.bootcamp.tracker.jooq.Keys.PROJECTS_PKEY, Tasks.TASKS, "tasks__tasks_project_id_fkey", Tasks.TASKS.PROJECT_ID);
        public static final ForeignKey<TasksRecord, TasksRecord> TASKS__TASKS_PARENT_ID_FKEY = createForeignKey(sages.bootcamp.tracker.jooq.Keys.TASKS_PKEY, Tasks.TASKS, "tasks__tasks_parent_id_fkey", Tasks.TASKS.PARENT_ID);
        public static final ForeignKey<UserProjectRecord, UsersRecord> USER_PROJECT__USER_PROJECT_USER_ID_FKEY = createForeignKey(sages.bootcamp.tracker.jooq.Keys.USERS_PKEY, UserProject.USER_PROJECT, "user_project__user_project_user_id_fkey", UserProject.USER_PROJECT.USER_ID);
        public static final ForeignKey<UserProjectRecord, ProjectsRecord> USER_PROJECT__USER_PROJECT_PROJECT_ID_FKEY = createForeignKey(sages.bootcamp.tracker.jooq.Keys.PROJECTS_PKEY, UserProject.USER_PROJECT, "user_project__user_project_project_id_fkey", UserProject.USER_PROJECT.PROJECT_ID);
    }
}
